# build and test go
ci:
  box: golang
  steps:
    - setup-go-workspace
    - golint:
        exclude: vendor/**/*
    - script:
        name: go test
        code: |
          #set -e
          #echo "" > coverage.txt

          #for d in $(go list ./... | grep -v vendor | grep -v config | grep -v dev | grep -v ui); do
          #go test -race -coverprofile=profile.out -covermode=atomic $d
          #if [ -f profile.out ]; then
          #cat profile.out >> coverage.txt
          #rm profile.out
          #fi
          #done

          #cat coverage.txt
          echo "temp skip tests"
    - script:
        name: upload coverage
        code: |
          echo "temp skip coverage"
          #bash <(curl -s https://codecov.io/bash)

ci-ui:
  box: node:6.9
  steps:
    - script:
        name: run tests
        code: |
          cd ui
          npm install
          #npm run test

build-ui:
  box: node:6.9
  steps:
    - script:
        name: ui build
        code: |
          cd ui &&
          npm run build &&
          ls -la .
          ls -la ../

build-release:
  box: golang
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/generationtux/brizo
    - script:
        name: go build
        code: |
          cd $GOPATH/src/github.com/generationtux/brizo
          go build
          ls -la ui
          rm -rf vendor
          rm -rf ui/node_modules
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        entrypoint: /go/src/github.com/generationtux/brizo/brizo
        repository: gentux/brizo
        disable-sync: true
        tag: latest
