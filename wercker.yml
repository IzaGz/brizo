# build and test go
#
ci:
  box: golang
  steps:
    - setup-go-workspace
    - golint:
        exclude: vendor/**/*
    - script:
        name: go test
        code: |
          set -e
          echo "" > coverage.txt

          for d in $(go list ./... | grep -v vendor | grep -v config | grep -v dev | grep -v ui); do
              go test -race -coverprofile=profile.out -covermode=atomic $d
              if [ -f profile.out ]; then
                  cat profile.out >> coverage.txt
                  rm profile.out
              fi
          done

          cat coverage.txt
    - script:
        name: upload coverage
        code: |
          bash <(curl -s https://codecov.io/bash)

# build and test UI
ci-ui:
  box: node
  steps:
    - script:
        name: run tests
        code: |
          cd ui
          npm install
          npm run test

# build ui
build-ui:
  box: node
  steps:
    - script:
        name: ui build
        code: |
          cd ui
          npm install
          npm run build

# pushes release image to docker hub
build-release:
  box: golang
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/generationtux/brizo
    - script:
        name: go build
        code: |
          cd $GOPATH/src/github.com/generationtux/brizo
          go build
          rm -rf vendor
          rm -rf ui/node_modules
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        entrypoint: $GOPATH/src/github.com/generationtux/brizo/brizo
        repository: gentux/brizo
        disable-sync: true
        tag: latest
